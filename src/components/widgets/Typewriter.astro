---
const { words, width, duration } = Astro.props as { words: string[]; width: string; duration: number };

const id = Math.random().toString(36).substring(7);

const wordsStyle = `
  .words_${id} {
    display: inline-block;
    position: relative;
    width: ${width};
    overflow: hidden;
    vertical-align: top;
    height: 1em;
    white-space: nowrap;
  }

  .words_${id} span {
    animation: rotateWordsSecond_${id} ${words.length * duration}s linear infinite 0s;
    position: absolute;
    top: 0;
    left: 0;
    text-align: left;
    overflow: hidden;
    width: 0;
    opacity: 0;
  }

  @keyframes rotateWordsSecond_${id} {
    0% { opacity: 1;  width: 0; }
    ${35 / words.length}% { opacity: 1; width: ${width}; }
    ${90 / words.length}% { opacity: 1; width: ${width}; }
    ${100 / words.length}% { opacity: 1; width: 0; }
  }
`;

const delayStyleClasses = words
  .map(
    (_, index) => `
  .words_${id} span:nth-child(${index + 1}) { animation-delay: ${duration * index}s; }
`,
  )
  .join('');

const allStyles = wordsStyle + delayStyleClasses;
---

<style set:html={allStyles}></style>

<span class={`words_${id}`}>
  {words.map((word) => <span>{word}</span>)}
</span>
