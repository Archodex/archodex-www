---
import { Image } from 'astro:assets';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
  imageDark = await Astro.slots.render('imageDark'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative py-10 md:pb-0 md:-mt-[76px] not-prose" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none lg:absolute"></div>
    <div class="lg:flex lg:items-center lg:h-screen lg:gap-8">
      <div class="pb-10 lg:pb-0 basis-1/2 text-center lg:text-left mx-auto">
        {
          tagline && (
            <p
              class="text-base text-secondary font-bold tracking-wide uppercase intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto lg:max-w-none">
          {
            subtitle && (
              <p
                class="text-xl text-muted mb-6 intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter"
                set:html={subtitle}
              />
            )
          }

          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 lg:justify-start lg:m-0 lg:max-w-7xl intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div class="basis-1/2">
        {
          image && (
            <div
              class:list={[
                'relative',
                'm-auto',
                'max-w-5xl',
                'intersect-once',
                'intercept-no-queue',
                'motion-safe:md:intersect:animate-fade',
                'motion-safe:md:opacity-0',
                'intersect-quarter',
                imageDark ? 'dark:hidden' : '',
              ]}
            >
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image class="mx-auto rounded-md w-full" loading="eager" {...image} />
              )}
            </div>
          )
        }
        {
          imageDark && (
            <div
              class:list={[
                'relative',
                'm-auto',
                'max-w-5xl',
                'intersect-once',
                'intercept-no-queue',
                'motion-safe:md:intersect:animate-fade',
                'motion-safe:md:opacity-0',
                'intersect-quarter',
                'hidden',
                'dark:block',
              ]}
            >
              {typeof imageDark === 'string' ? (
                <Fragment set:html={imageDark} />
              ) : (
                <Image class="mx-auto rounded-md w-full" loading="eager" {...imageDark} />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
