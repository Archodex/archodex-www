---
import Layout from '~/layouts/PageLayout.astro';
import Hero2 from '~/components/widgets/Hero2.astro';
import Features2 from '~/components/widgets/Features2.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';

const metadata = { title: 'eBPF Sensor' };
---

<Layout metadata={metadata}>
  <Hero2 title="Painless Instrumentation" subtitle="Archodex uses eBPF for seamless, low-overhead observability." />

  <Features2
    title="Simple Setup"
    subtitle="Get up and running in minutes with our containerized eBPF agent"
    items={[
      {
        title: 'No Code Changes',
        description:
          'The Archodex eBPF Agent requires no code changes. Run it once per host to observe all secrets usage.',
        icon: 'tabler:brackets-angle-off',
      },
      {
        title: 'Kubernetes & Servers',
        description: 'Install our Helm Chart for cluster-wide visibility or run our agent from a Docker container.',
        icon: 'simple-icons:kubernetes',
      },
      {
        title: 'CI/CD Pipelines',
        description: 'Add our GitHub Action to your CI/CD workflow to observe secrets usage in your pipelines.',
        icon: 'simple-icons:githubactions',
      },
    ]}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 bg-primary/5 dark:bg-transparent"></div>
    </Fragment>
  </Features2>

  <Features2
    title="Deep Introspection"
    subtitle="Archodex safely peeks into encrypted network traffic to identify secrets in use"
    items={[
      {
        title: 'Secrets Storage',
        description: 'Archodex observes workloads as they access secrets managers like Hashicorp Vault.',
        icon: 'simple-icons:vault',
      },
      {
        title: 'Encrypted API Traffic',
        description: 'Archodex Rulesets watch for API keys and other secrets in HTTPS traffic.',
        icon: 'tabler:network',
      },
      {
        title: 'Safe & Secure',
        description:
          'Your secrets are never logged or stored, Archodex cryptographically hashes observed secrets before logging or sending them to the Archodex Service.',
        icon: 'tabler:shield-check',
      },
    ]}
  />

  <Features2
    title="Near-Zero Overhead"
    subtitle="Kernel-level filtering for minimal performance impact"
    items={[
      {
        title: 'Designed for Scale',
        description: 'Archodex Rulesets are designed to filter out uninteresting traffic quickly, minimizing overhead.',
        icon: 'tabler:server-cog',
      },
      {
        title: 'Efficient Filtering',
        description:
          'The Archodex eBPF Sensor uses kernel-level hostname filters to further minimize performance overhead.',
        icon: 'tabler:filter',
      },
      {
        title: 'Pinpoint Accuracy',
        description:
          "Target only the workloads, services, and APIs you care about with Archodex's flexible Rulesets schema.",
        icon: 'tabler:target',
      },
    ]}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 bg-primary/5 dark:bg-transparent"></div>
    </Fragment>
  </Features2>

  <CallToAction
    actions={[
      { variant: 'primary', text: 'Start Free', href: `https://app.${import.meta.env.PUBLIC_ARCHODEX_DOMAIN}/signup` },
    ]}
  >
    <Fragment slot="title"> Solve Your DevSecOps Challenges Today </Fragment>
  </CallToAction>
</Layout>
